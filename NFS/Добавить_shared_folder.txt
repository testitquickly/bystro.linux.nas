Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2024-11-03T18:16:09+02:00

====== Добавить shared folder ======

Шарить можно только те shared-каталоги, которые уже были добавлены (зарегистрированы) в OMV. См. [[Shared Folders:Добавить shared-каталог]]

''Services'' 
''> NFS''
''> Shares'' 
''> [+ Add]''

* выбрать существующий (например, ''v1'')
* Client — указать домашнюю сеть с параметрам “''0/24''”, например __''192.168.50.0/24''__
	* «разрешить подключение всем, кто приходит из сети с IP от ''192.168.50.0'' до ''192.168.50.254''». 
		* здесь „192.168.1.0/24” — обозначение подсети в формате CIDR (Classless Inter-Domain Routing). ''24'' — это маска подсети, которая задаёт, сколько битов IP-адреса относятся к сети (в данном случае, 24 бита). В результате остаётся 8 битов для адресов внутри этой подсети, что даёт 256 возможных адресов (от ''192.168.1.0'' до ''192.168.1.255''). См. также https://manpages.debian.org/bookworm/nfs-kernel-server/exports.5.en.html
	* можно указать ''*'' — открытый доступ всем. Безопасно только в полностью закрытой сети. Но если когда-то понадобится пусть и ненадолго открыть доступ к NAS извне, то будет ойблэт.
* Permission — Read/Write
* Extra options 
	* или максимально либеральные — ''insecure,no_root_squash,no_subtree_check,rw,sync''
		* ''insecure'': Разрешает серверу принимать соединения от клиентов на портах выше 1024. NFS по умолчанию использует порты в диапазоне 1023 и ниже для связи между сервером и клиентом. Это связано с тем, что порты ниже 1024 считаются "привилегированными" (reserved) и могут использоваться только системными службами. Например, стандартный порт для NFS — это 2049. Обычно это небезопасно.
		* ''no_root_squash'': Отключает сжатие прав для пользователя root и позволяет пользователю root __на клиенте__ иметь те же привилегии, что и у root на сервере. По умолчанию, в NFS-сервере права пользователя root на клиенте маппируются на обычного пользователя (например, nobody), у которого или нет прав, или очень мало прав, а эта опция всё меняет. Очень опасна в общей сети, но можно (и даже нужно) использовать, если подключение происходит //только// в домашней сети.
		* ''no_subtree_check'': Ускоряет доступ к файлам, отключая проверку поддеревьев каталога. Полезно.
		* ''rw'': Устанавливает все права на запись. В ряде случаев это не работает и нужна дополнительная настройка, но пусть будет. Антоним — ''ro'', она же read only.
		* ''sync'': Рекомендуется для гарантии записи данных для домашнего NAS. Cервер будет дожидаться завершения записи перед тем, как подтвердить клиенту успешную операцию. Вот если к NAS будет много обращений, тогда не надо, потому что сервер будет ожидать завершения записи на диск, прежде чем продолжить выполнение других операций. Все будут висеть в очереди и нервничать.
	* или очень небезопасные — ''anonuid=1001,anongid=1001,insecure,no_root_squash,no_subtree_check,rw,sync''
		* можно использовать только для своего NAS в своей сети, куда больше никто не заходит и даже случайно не будет что-либо удалять
		* эти настройки предполагают, что на NAS есть юзер с ''UID=1001'', и все, кто зайдут на сервер по NFS, будут иметь тот же доступ к файлам, что и указанный юзер. Это максимально снимает все вероятные сложности с правами на запись, но так же максимально небезопасно при подключениях извне.

В принципе для одинокого юзера можно указать опцию ''all_squash'' и ''anonuid='' вместе с ''anongid='' юзера, который на стороне NAS имеет права на запись. И ничего не мешает указать ''id'' юзера ''root''…

//Next step//: [[Подключение с ноута]]
