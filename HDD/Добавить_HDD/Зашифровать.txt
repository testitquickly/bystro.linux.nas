Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2023-01-31T16:50:18+02:00

====== Зашифровать ======

Шифровать надо диск ДО появления на нём данных. И уж тем более до создания RAID. Уже работающий диск придётся освободить от файлов и пересоздать на нём партицию. Есть возможность выполнить предварительное WIPE, но на больших дискать перезатирание мест для хранения данных будет выполняться долго (вероятно, несколько суток).

Непременно надо шифровать криптокошельки и прочую бухгалтерию, но для такого добра шифровать весь диск не нужно, оно много места не занимает и может лежать в криптоконтейнере типа VeraCrypt. А ещё можно такие файлы зашифровывать через ключи gpg, тогда и криптоконтейнер для них не собо нужен.

При шифровании небольшое торможение к дискам будет неизбежно, примерно такое же, как при использовании антивируса. Если файлы небольшие, это будет заметно только психологически. Если файлы большие (фильмы), это будет заметно, потому что из-за шифрования растёт нагрузка на CPU. Но если тебе надо шифровать диск с фильмами, то, наверное, тебе не нужен NAS.

Важно понимать: 

* зашифрованность диска обломит того, кто вытащит/украдёт диск из NAS и захочет его прочитать, но совершенно не остановит того, кто атакует компьютер через сеть, потому что после успешного логина и запуска OMV диски уже будут расшифрованы. Особо секретные файлы надо дополнительно положить в криптоконтейнер и зашифровать ключом gpg — и пароли каждого уровня закрытия не должны повторяться, нигде и никак
* шифрование HDD не остановит порядочного гражданина, который случайно захочет прогреть свой утюг на незашифрованной заднице счастливого владельца NAS с надёжно зашифрованными дисками внутри

Есть мнение о том, что из-за шифрования диски живут «меньше необходимого». Не могу это ни подтвердить, ни опровергнуть, известно только, что:

* шифрование SSD практически не снижает срок службы диска, если это современный SSD с нормальным TBW (Total Bytes Written, характеристика SSD которая указывает сколько данных можно всего записать на диск, прежде чем он официально исчерпает свой ресурс), и TRIM включён (discard работает) и в swap не записываются гигабайты данных каждый час. Но в случае сбоя восстановление данные с SSD с активным TRIM без резервной копии практически невозможно — удалённые блоки физически уничтожаются
* шифрование HDD не влияет на их долгожительность, потому что у них нет ограниченного ресурса TBW, как у SSD
* любой диск может внезапно умереть, не оставив после себя наследства. Восстанавливать записи с зашифрованного диска — отдельная олимпиада

Кстати, о восстановлении данных со сбойного диска. Это возможно, но зависит от типа отказа и от того, как был зашифрован диск. Если диск использует сильное шифрование (BitLocker, VeraCrypt, LUKS, как мы любим), данные без ключа/пароля восстановить невозможно, шифрование делает их полностью случайными с точки зрения восстановления. Придётся передать незнакомому человеку в незнакомый сервис ключ и надеяться на то, что он не будет открывать восстановленный контент. И не передаст его кому-нибудь. И не выложит в сеть. И не запаролит с намёком на выкуп.

===== Установить шифрование =====

 Зайти на NAS по ssh

''sudo apt update && sudo apt install cryptsetup''

===== Вставить в систему диск =====

Диск, который надо зашифровать — на нём должна быть только файловая система, одна партиция.

Примонтировать его.

===== Установить плагин LUKS =====

''System > Plugins''

Найти в поиске плагин //openmediavault-luksencryption// и установить его.
В разделе Storage появится новый пункт “Encryption”

===== Создать зашифрованный контейнер =====

2. ''Storage > Encryption > [+ Create]''
3. в поле Device выбрать вставленный диск.
4. Указать //encryption key// поядрённее. Не потерять его и не ошибиться при записи, потому что без ключа зашифрованные данные восстановлению не подлежат
5. [Create / Apply / Yes]

Если надо зашифровать несколько дисков — повторить для каждого последовательно.

Не факт, что это всё сработает, если диск уже использовался, всегда есть нюансы. Например, в форме создания зашифрованного контейнера в поле Device ничего не отображается. Но это не мешает сделать всё вручную

Проверить диски:

''sudo lsblk''

Найти/распознать свой диск и записать его адрес, например, ''/dev/sdc''. Если на нем будет создана партиция, она будет называться ''/dev/sdc1''. Этот адрес временный, при каких-то операциях стирания/создания партиций он может поменяться.

==== Создать LUKS-раздел ====

''sudo cryptsetup luksFormat /dev/sdc1''

Ввести заглавными буквами ''YES'' и указать придуманный для этого пароль. 

Сохранить этот пароль самым надёжным способом.

==== Создать зашифрованный контейнер ====

Можно выбрать любое имя, например, оно может совпадать с лейблом диска (см. [[Прописать label]]), и лейбл будет создан в следующем шаге:

''sudo cryptsetup open /dev/sdc1 wd_red_4tb_bkp_enc''

Указать пароль.

Если ВНЕЗАПНО захочется переименовать контейнер, его надо сперва закрыть:

''sudo cryptsetup close wd_red_4tb_bkp_enc''

Затем открыть тот же контейнер с новым именем. Эта операция не удаляет данные:

''sudo cryptsetup open /dev/sdc1 wd_purple_4tb_bkp_enc''

==== Создать в контейнере файловую систему ====

И одновременно прописать партиции label:

''sudo mkfs.ext4 /dev/mapper/enc_wd_red_4tb_bkp -L wd_red_4tb_bkp''

Проверить:

''sudo lsblk -f''

Ожидаемый результат:

''sdc''   
''└─sdc1                 crypto_LUKS 2                    138c5515-984e-4fd6-8702-e98529cee3b5''
  ''└─enc_wd_red_4tb_bkp ext4        1.0   wd_red_4tb_bkp e1e79759-47be-4b71-8b05-c121b8634b4e''

Контейнеры (зашифрованные партиции) определяются как отдельные устройства, но с другим типом имен:

''ls -l /dev/mapper''

Вероятный ответ:

''итого 0''
''crw------- 1 root root 10, 236 ноя  1 10:39 control''
''lrwxrwxrwx 1 root root       7 ноя  1 11:09 enc_wd_red_4tb_bkp -> ../dm-0''

Когда будут добавлены новые контейнеры, цифра порядка будет увеличена:

''/dev/dm-0''
''/dev/dm-1''
''…''

OMV должен автоматически подхватить партицию с контейнером ''/dev/mapper/enc_wd_red_4tb_bkp'' во вкладке ''File Systems'' — она определяется как ''/dev/dm-0'', и её можно смонтировать как обычный диск.

Новый диск появится в разделе Storage > Encryption. Если диск уже примонтирован в систему, то он будет разлочен при запуске OMV, в системе появляется новое устройство в разделе /srv/. По-умолчанию запись на него открыта только для root.

Если диск примонтирован, то залочить его не получится (будет ошибка 500). Чтобы его залочить, надо его сперва отмонтировать.

===== Сделать бэкап LUKS header =====

LUKS header — это главная метка и структура шифрования контейнера, где хранятся:

* ключи шифрования (master key, ключи пользователей),
* параметры шифрования (алгоритм, размер блока),
* метаданные тома.

Без него доступ к данным потерян. Если заголовок повреждён (например, из-за сбоя диска или случайного dd), то восстановить содержимое невозможно, даже если пароль известен. Поэтому бэкап LUKS header — это //отдельный файл//, который можно восстановить при проблемах, не трогая сам зашифрованный том.

1. ''Storage > Encryption''
2. Выбрать диск
3. Recovery
4. Выбрать Backup-header
5. Сохранить его, бо в будущем может понадобиться.

Можно сделать то же самое вручную:

''sudo cryptsetup luksHeaderBackup /dev/sdc1 --header-backup-file /root/enc_wd_red_4tb_bkp.bak''

* /dev/sdc1 — зашифрованный раздел
* /root/wd_red_4tb-header.bak — файл бэкапа, хранить на другом диске, который лежит в утке, которая лежит в дудке. Этот файл содержит все ключи LUKS, если кто-то его получит — сможет расшифровать зашифрованный диск. Размер таких файлов  <2 MB, поэтому хранить его можно где угодно, лишь бы подальше от NAS.

===== Разлочить диск =====

1. ''Storage > Encryption''
2. Выбрать нужный диск > [Unlock]
3. Указать пароль для расшифровки > [Unlock]
4. Синяя точка должна отметить, что диск расшифрован.

Если диск уже примонтирован в систему, то он будет разлочен автоматически.

===== Создать партицию =====

1. ''Storage > Files Systems > [+ Create]''
2. Указать добавленный и расшифрованный диск
3. Указать label диска
4. Выбрать файловую систему из выпадающего меню
5. Mount
6. [Save / Apply / Yes]

Сделать каталоги для shares (или RAID) и тд.

//Вернуться//: [[Добавить HDD]]
