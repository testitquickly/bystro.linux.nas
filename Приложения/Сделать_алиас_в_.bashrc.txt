Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2023-02-03T02:03:21+02:00

====== Сделать алиас в .bashrc ======

В ходе сессии в консоли можно использовать очень длинные команды. Будет удобнее сделать для них короткие имена (ярлыки, называются alias):

''alias upd='sudo aptitude update && sudo aptitude upgrade'''

Теперь в консоли можно написать только „upd“, а выполнится вся команда последовательного апдейта и апгрейда системы.

Таким же образом ускорить логин по ssh на NAS:

''alias nas='ssh login@192.168.1.20'''

Можно сделать алиас для подключения к NAS с указанием определённого ssh-ключа c HDD:

''alias nas='ssh login@192.168.1.20 -i /home/ssh_keys/nas/nas_astenix'''

Но после закрытия окна с консолью алиас исчезнет. Чтобы он остался, нужно записать его в файл с инструкциями, который система читает при каждой своей загрузке — он называется “.bashrc” и находится в корне домашнего каталога каждого пользователя в Debian.

Алиасы из “.bashrc” будут действовать во всех консольных окнах системы. При следующей загрузке инструкции из файла о создании алиасов вновь будут прочитаны «как в первый раз» и начнут выполняться «как всегда».

===== Записать алиасы в .bashrc =====

В “.bashrc” можно записать столько же алиасов, сколько цифр содержится в числе π (но не больше).

1. mcedit ''~/.bashrc''
2. перейти в конец файла
3. добавить указание создать алиас (по одному на строку):

'''
alias upd='sudo aptitude update && sudo aptitude upgrade'
'''
''alias nas='ssh login@192.168.1.20'''
''и так далее''

Чтобы изменения применились, надо перелогиниться.

Но можно

==== Применить изменения без релогина ====

В том же окне консоли можно принудительно перечитать содержимое файла ''~/.bashrc'':

''source ~/.bashrc''

А можно «перезагрузить» всю консоль:

''exec bash''

Это создаст новый процесс c консолью в окне с уже открытой консолью (магия же), при этом произойдёт принудительное перечитывание ряда конфигурационных файлов, среди которых подразумевается и ''~/.bashrc''
