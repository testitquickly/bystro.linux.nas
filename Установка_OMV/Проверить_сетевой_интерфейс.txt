Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2024-05-08T22:36:07+03:00

====== Проверить сетевой интерфейс ======

В норм этот шаг необязателен, но иногда надо.

===== Узнать название всех доступных сетевых контроллеров =====

и проводного, и Wi-Fi

==== Вкратце ====

''nmcli connection show''

На OMV может быть не установлена „nmcli”.

==== Подробно ====

''lspci | egrep -i --color 'Ethernet|wlan|Wireless'''

Пример ответа:

''02:00.0 Network controller: Qualcomm Atheros QCA6174 802.11ac Wireless Network Adapter (rev 32)''
''03:00.1 Ethernet controller: Realtek Semiconductor Co., Ltd. RTL8111/8168/8411 PCI Express Gigabit Ethernet Controller (rev 12)''

===== Выяснить названия действующих сетевых интерфейсов =====

''ip addr''

Обычное подключение по проводу может называться „enp2s0”, но всегда есть нюансы.

===== Узнать теоретическую скорость подключения =====

Установить „ethtool” и запросить данные:

''sudo apt-get install ethtool && sudo ethtool enp2s0''

В ответе можно узнать „''Speed: 1000Mb/s''”. 

	Это условный ''1 гигабит/сек'' = ''125 мегабайт/сек''. 

	Реальная максимальная скорость почти всегда вдвое меньше, вроде ''55 Миб/сек'' = ''6.5 мегабайт/сек''.

	Также на скорость передачи файлов влияет носитель файлов и способы его подключения. HDD в доке для дисков через USB 2.0 всегда будет медленнее передачи файлов с SSD. Также скорость зависит от других процессов, которые могут работать на ноуте или в NAS, или если передаётся множество мелких файлов. Однозначны цифр здесь быть не может.

===== Замерить скорость по LAN =====

Ноутбук и NAS подключены к одному роутеру, без внешней сети. Как проверить скорость в LAN?

===== iPerf =====

И на ноутбуке, и на NAS надо установить iPerf, кроссплатформенный консольный генератор TCP, UDP и SCTP трафика для тестирования пропускной способности сети:

''sudo apt-get install iperf3''

	Есть и просто ''iperf'', но ''iperf3'' архитектурно 
	очень отличается от оригинальной версии, 
	поэтому они представлены отдельно. 

	В отличие от оригинального ''iperf'', сервер ''iperf3'' 
	слушает только tcp-порт, выбор протокола 
	делает клиент. 

На NAS запустить iPerf в режиме сервера:

''iperf3 -s''

На ноутбуке запустить iPerf в режиме клиента, который обращается к NAS:

''iperf3 -c 192.168.50.10''

Пример ответа (см. //Bitrate//):

'''
Connecting to host 192.168.50.10, port 5201
[  5] local 192.168.50.248 port 53314 connected to 192.168.50.10 port 5201
[ ID] Interval           Transfer     Bitrate         Retr  Cwnd
[  5]   0.00-1.00   sec   114 MBytes   952 Mbits/sec    0    335 KBytes       
[  5]   1.00-2.00   sec   113 MBytes   945 Mbits/sec    0    352 KBytes       
[  5]   2.00-3.00   sec   112 MBytes   938 Mbits/sec    0    352 KBytes       
[  5]   3.00-4.00   sec   112 MBytes   943 Mbits/sec    0    352 KBytes       
[  5]   4.00-5.00   sec   112 MBytes   939 Mbits/sec    0    352 KBytes       
[  5]   5.00-6.00   sec   113 MBytes   945 Mbits/sec    0    352 KBytes       
[  5]   6.00-7.00   sec   112 MBytes   942 Mbits/sec    0    387 KBytes       
[  5]   7.00-8.00   sec   112 MBytes   942 Mbits/sec    0    387 KBytes       
[  5]   8.00-9.00   sec   112 MBytes   942 Mbits/sec    0    387 KBytes       
[  5]   9.00-10.00  sec   112 MBytes   940 Mbits/sec    0    387 KBytes       
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID] Interval           Transfer     Bitrate         Retr
[  5]   0.00-10.00  sec  1.10 GBytes   943 Mbits/sec    0             sender
[  5]   0.00-10.00  sec  1.10 GBytes   941 Mbits/sec                  receiver

iperf Done.

'''
«Мегабиты в секунду» можно перевести в более привычные «мегабайты в секунду»

''941 Мбит/с ÷ 8 = 117 МБ/с''

На стороне NAS прервать работу ''iperf3'' через Ctrl+C.

===== Монитор сетевой нагрузки =====

''sudo apt-get install nload''

Очень простой и внятный инструмент. Есть и другие вроде ''bmon'' и ''iftop'', в том числе и ''glance'' — продвинутый аналог ''htop'', большой набор утилит на одном экране (внутри Python), среди которых есть показатели сети. Но если надо всего лишь глянуть сетевую нагрузку и не расходовать лишние биты памяти, то ''nload'' однозначно.

//Next step//: [[Настроить бэкап OMV]]
